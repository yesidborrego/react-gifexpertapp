{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","getGifs","category","a","URL","fetch","res","json","data","gifs","map","image","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","catch","console","error","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,KAejD,OACE,uBAAMC,SATkB,SAACC,GACxBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKhB,UACE,iFACA,uBACEO,KAAK,OACLC,YAAY,GACZC,MAAOV,EACPW,SAnBoB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,c,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCF,EADjC,+DAEHG,MAAMD,GAFH,cAEfE,EAFe,gBAGEA,EAAIC,OAHN,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAU,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MACbC,IAAG,UAAEH,EAAMI,cAAR,aAAE,EAAcC,iBAAiBF,QATnB,kBAadL,GAbc,4CAAH,sDCGPQ,EAAc,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACnC,OACE,sBAAKI,UAAU,yCAAf,UACE,qBAAKC,IAAML,EAAMM,IAAMP,IACvB,4BAAKA,QCDEQ,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EACdf,mBAAS,CACjC4B,OAAQ,GACRO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAU,WACRxB,EAAQC,GACNwB,MAAK,SAAAC,GACHH,EAAS,CACPT,OAAQY,EACRL,SAAS,OAGbM,MAAMC,QAAQC,SACf,CAAC5B,IAGGqB,EDdmBQ,CAAa7B,GAAhCa,EADgC,EAChCA,OAAQO,EADwB,EACxBA,QAEf,OACE,eAAC,WAAD,WACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACnD,sBAAKgB,UAAU,YAAf,UAEKI,GAAY,mBAAGJ,UAAU,2CAAb,SAAwD,mDAGnEH,EAAOL,KAAK,SAACC,GAAD,OACV,cAAC,EAAD,eAEMA,GADCA,EAAMC,cEgBZoB,EA/BM,WAAO,IAAD,EACW7C,mBAAS,CAAC,WADrB,mBAClBQ,EADkB,KACNT,EADM,KAUzB,OACE,eAAC,WAAD,WACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEA,6BAEIS,EAAWe,KAAK,SAAAR,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,YCnBpB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9bdc8039.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n   }\r\n\r\n   const handleSubmitForm = (e) => {\r\n     e.preventDefault();\r\n     if(inputValue.trim().length > 0) {\r\n      setCategories(categories => [inputValue, ...categories]);\r\n      setInputValue('');\r\n     }\r\n   }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmitForm }>\r\n      <label>Escribe el nombre del Gif que desea buscar: </label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}","export const getGifs = async (category) => {\r\n  const URL = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=3yJxG1eWVr3RGqfAXvcbQq8KjyQ572iE`;\r\n  const res = await fetch(URL);\r\n  const { data } = await res.json();\r\n\r\n  const gifs = data.map( image => {\r\n    return {\r\n      id: image.id,\r\n      title: image.title,\r\n      url: image.images?.downsized_medium.url,\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ url } alt={ title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n}","// import React, { Fragment, useEffect, useState } from 'react'\r\nimport React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n  const {images, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      <div className=\"card-grid\">\r\n        {\r\n          (loading) && <p className=\"animate__animated animate__flash loading\"><strong>Cargando...</strong></p>\r\n        }\r\n          {\r\n            images.map( (image) => (\r\n              <GifGridItem\r\n                key={image.id}\r\n                {...image}\r\n              />\r\n            ))\r\n          }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string.isRequired\r\n}","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    images: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n     .then(imgs => {\r\n        setState({\r\n          images: imgs,\r\n          loading: false\r\n        })\r\n     })\r\n     .catch(console.error);\r\n  }, [category]);\r\n\r\n\r\n  return state;\r\n}","import React, { Fragment, useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['Marvel']);\r\n\r\n  /*\r\n  const handleAddCategory = () => {\r\n    // setCategories([...categories, 'HunterXHunter']); // Opción 1\r\n    setCategories( allCategories => [...allCategories, 'HunterXHunter'] ); // Opción 2 usando callback\r\n  }\r\n*/\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map( category => (\r\n            <GifGrid\r\n              key={ category }\r\n              category={ category }\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}